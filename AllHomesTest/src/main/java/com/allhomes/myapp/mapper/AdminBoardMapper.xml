<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.allhomes.myapp.admin.AdminBoardDaoImp">
	<select id="countHomeBoardToday" resultType="int">
		select count(*) from homeboard where to_char(writedate, 'YYYY-MM-DD') = to_char(sysdate, 'YYYY-MM-DD')
	</select>
	<select id="countQAToday" resultType="int">
		select count(*) from qnaboard where to_char(writedate, 'YYYY-MM-DD') = to_char(sysdate, 'YYYY-MM-DD')
	</select>
	<select id="countReviewToday" resultType="int">
		select count(*) from review where to_char(writedate, 'YYYY-MM-DD')= to_char(sysdate, 'YYYY-MM-DD')
	</select>
	
	<!-- Homeboard 모든 글-->
	<select id="selectAllHomeBoard" parameterType="String" resultType="com.allhomes.myapp.homeboard.HomeboardVO">
		select b_no, title, theme, userid, hit, scrap, to_char(writedate, 'YYYY-MM-DD') writedate from homeboard
	</select>
	
	<!-- 모든 homeboard 글 가져오기(정렬)-->
	<select id="selectAllHomeBoardOrder" parameterType="String" resultType="com.allhomes.myapp.homeboard.HomeboardVO">
		select b_no, title, theme, userid, hit, scrap, to_char(writedate, 'YYYY-MM-DD') writedate from homeboard
		<choose>
			<when test="order!=null and order.equals('title')">
   				order by title
   			</when>
   			<when test="order!=null and order.equals('writedate')">
   				order by writedate desc
   			</when>
   			<when test="order!=null and order.equals('hit')">
   				order by hit desc
   			</when>
   			<when test="order!=null and order.equals('scrap')">
   				order by scrap desc
   			</when>
		</choose>
	</select>
	
	<!-- 질문게시판 전체 리스트 -->
	<select id="qnaAllList" resultType="com.allhomes.myapp.qna.QnaVO">
	 	select q_no, title, content, thumbnail, userid, hit, answer, to_char(writedate, 'YYYY-MM-DD') writedate from qnaboard
	</select>
  
	<!-- homeboard 글내용보기 -->
  	<select id="adminHomeboardSelect" parameterType="int" resultType="com.allhomes.myapp.homeboard.HomeboardVO">
  		select b_no, userid, title, content, theme, hashtag, hit, scrap, to_char(writedate, 'YYYY-MM-DD HH24:MI') writedate
  		from homeboard where b_no=#{param1}
  	</select>
  
	<!-- homeboard 선택 검색 -->
	<select id="adminHBSearch" parameterType="String" resultType="com.allhomes.myapp.homeboard.HomeboardVO">
 		select b_no, title, theme, userid, hit, scrap, to_char(writedate, 'YYYY-MM-DD') writedate from homeboard 
 		<where>
	 		<choose>
	 			<when test="value == 'userid'">
	 				userid LIKE '%'||#{key}||'%'
	 			</when>
	 			<when test="value == 'title'">
	 				title LIKE '%'||#{key}||'%'
	 			</when>
	 			<when test="value == 'content'">
	 				 content LIKE '%'||#{key}||'%'
	 			</when>
	 		</choose>
 		</where>
 	</select>
	
	<!-- homeboard 상세 검색 -->
	<select id="adminHBSearchDetail" parameterType="com.allhomes.myapp.homeboard.HomeBoardDetailSearchVO" resultType="com.allhomes.myapp.homeboard.HomeboardVO">
		select b_no, title, theme, userid, hit, scrap, to_char(writedate, 'YYYY-MM-DD') writedate from homeboard 
		<where>
			<trim prefixOverrides="and">
		 		<if test="title != null">and title LIKE '%'||#{title}||'%' </if>
		 		<if test="content != null">and content LIKE '%'||#{content}||'%' </if>
		 		<if test="hashtag != null">and hashtag LIKE '%'||#{hashtag}||'%' </if>
		 		<if test="userid != null">and userid LIKE '%'||#{userid}||'%' </if>
		 		<if test="nickname != null">and nickname LIKE '%'||#{nickname}||'%' </if>
		 		<if test="date != null and date2 != null">and to_date(writedate, 'YY/MM/DD')  between to_date(#{date}, 'YY/MM/DD') and to_date(#{date2}, 'YY/MM/DD')</if>
	 		</trim>
		</where>
	</select>
	
	<!-- 모든 리뷰 가져오기 -->
	<select id="selectAllReview" resultType="com.allhomes.myapp.admin.AdminReviewJoinVO">
		select store.s_no, store.s_name, product.pd_no, product.pd_name, review.content, review.rating, to_char(review.writedate, 'YYYY-MM-DD') writedate 
		from store, review, product
		where review.pd_no = product.pd_no and store.s_no = review.s_no
	</select>
	
	<!-- 리뷰 별점별로 가져오기  -->
	<select id="selectReviewOne" resultType="int">
		select count(*) from review where rating=1
	</select>
	<select id="selectReviewTwo" resultType="int">
		select count(*) from review where rating=2
	</select>
	<select id="selectReviewThree" resultType="int">
		select count(*) from review where rating=3
	</select>
	<select id="selectReviewFour" resultType="int">
		select count(*) from review where rating=4
	</select>
	<select id="selectReviewFive" resultType="int">
		select count(*) from review where rating=5
	</select>
</mapper>