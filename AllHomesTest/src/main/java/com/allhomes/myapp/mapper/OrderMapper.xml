<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.allhomes.myapp.order.OrderDaoImp">
 	<!-- 장바구니 정보 얻어오기 -->
 	<select id="selectOrderCart" resultType="com.allhomes.myapp.order.OrderVO">
 		select p.main_img,c.c_no,c.pd_no, p.pd_name, s.s_no, s.s_name, c.num,c.price, c.shipping_c, c.userid, c.o_value
		from cart c, product p , store s
		where c.pd_no = p.pd_no and p.s_no = s.s_no and c.c_no= #{c_no}
	</select>
 	
 	<!-- 회원번호 가져오기 -->
 	<select id="selectM_no" parameterType="String" resultType="int">
 		select m_no from register where userid=#{param1}
 	</select>
 	
 	<!-- 회원정보 얻어오기 -->
 	<select id="selectRegis" resultType="com.allhomes.myapp.register.RegisterVO">
 		select m_no, userid, username, email, tel from register where m_no=#{param1}
 	</select>
 	
 	<!-- 회원별 주소지 가져오기 -->
 	<select id="selectAddr" resultType="com.allhomes.myapp.order.AddressVO">
 		select receiver, a_code, zipcode, addr, addrdetail, tel, m_no from address where m_no = #{param1}
 	</select>
 	
 	<!-- 주문 테이블 선택 -->
 	<select id="selectCart" resultType="com.allhomes.myapp.order.CartOrderVO">
 		select pd_no, num, price, shipping_c, userid, o_value, c_no
 		from cart where c_no = #{param1}
 	</select>
 	
 	<!-- 주소지 번호로 주소지 가져오기 -->
 	<select id="selectA_code" resultType="com.allhomes.myapp.order.AddressVO">
 		select receiver, a_code, zipcode, addr, addrdetail, tel, m_no from address where a_code = #{param1}
 	</select>
 	
 	<!-- 구매 테이블에 추가 -->
 	<insert id="insertPurchase" parameterType="com.allhomes.myapp.order.PurchaseVO">
 		insert into purchase(pc_no, pd_no, s_no, userid, num, price, shipping_c, total_p, a_code, pc_date, payment, status, confirm, memo, o_value, m_no)
 		 values(pc_sq.nextval, #{pd_no}, #{s_no}, #{userid}, #{num}, #{price}, #{shipping_c}, #{total_p}, #{a_code}, sysdate, #{payment}, #{status}, #{confirm}, #{memo}, #{o_value}, #{m_no})
 	</insert>
 	
 	<!-- 구매테이블에 추가(시퀀스 그대로) -->
 	<insert id="insertPurchaseCurrval" parameterType="com.allhomes.myapp.order.PurchaseVO">
 		insert into purchase(pc_no, pd_no, s_no, userid, num, price, shipping_c, total_p, a_code, pc_date, payment, status, confirm, memo, o_value, m_no)
 		 values(#{pc_no}, #{pd_no}, #{s_no}, #{userid}, #{num}, #{price}, #{shipping_c}, #{total_p}, #{a_code}, sysdate, #{payment}, #{status}, #{confirm}, #{memo}, #{o_value}, #{m_no})
 	</insert>
 	
 	<!-- 결제번호 현재 시퀀스 가져오기 -->
 	<select id="getLastSQ" resultType="int">
 		SELECT LAST_NUMBER FROM USER_SEQUENCES WHERE  SEQUENCE_NAME = 'PC_SQ'
 	</select>
 	
 	<select id="statusDepositWaiting" resultType="int">
 		select count(*) from purchase where status = '입금대기'
 	</select>
 	<select id="statusPayment" resultType="int">
 		select count(*) from purchase where status = '결제완료'
 	</select>
 	<select id="statusDeliveryPre" resultType="int">
 		select count(*) from purchase where status = '배송준비'
 	</select>
 	<select id="statusDelivery" resultType="int">
 		select count(*) from purchase where status = '배송중'
 	</select>
 	<select id="statusConfirm" resultType="int">
 		select count(*) from purchase where status = '구매확정'
 	</select>
 	<select id="statusReviewDone" resultType="int">
 		select count(*) from purchase where status = '리뷰완료'
 	</select>
 	<!-- 주문 상태 수정 -->
 	<update id="orderStatusEdit" parameterType="com.allhomes.myapp.order.OrderEditVO">
 		update purchase set status = #{status} where pd_no = #{pd_no} and pc_no = #{pc_no}
 	</update>

</mapper> 

