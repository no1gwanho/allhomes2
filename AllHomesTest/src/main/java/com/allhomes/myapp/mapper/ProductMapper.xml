<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.allhomes.myapp.product.ProductDaoImp">
  	<!-- 모든 제품 조회 -->
  	<select id="productAllList" resultType="com.allhomes.myapp.product.ProductVO">
  	    select pd_no, s_no, pd_name, price, discount, main_img, stock, status, sub_c, pd_img from product order by pd_no desc
  	</select>
  	<!-- 제품 리뷰 조회 -->
  	<select id="productReviewList" parameterType="int" resultType="com.allhomes.myapp.review.ReviewVO">
  		select userid, pd_no, rating, content, writedate, s_no from review where pd_no=#{pd_no}
  	</select>
  	<!-- 메인페이지 제품리스트 -->
  	<select id="productMainList" resultType="com.allhomes.myapp.product.ProductVO">
  		select pd_no, s_no, pd_name, price, discount, main_img, stock, status, sub_c from product where pd_no in (select pd_no from (select pd_no from product order by pd_no desc) where rownum <![CDATA[<]]> 9)
  	</select>
  	<!-- 등록된 상품 수 조회 -->
  	<select id="getAllProductCount" resultType="int">
  		select count(pd_no) from product
	</select>  	
  	<!-- 스토어번호로 제품 검색 -->
  	<select id="selectStoreProduct" resultType="com.allhomes.myapp.product.ProductVO">
  		select pd_no, s_no, pd_name, price, discount, main_img, stock, status, sub_c, pd_img, pd_exp, o_value from product where s_no=#{s_no}
  	</select>  	
  	<!-- 제품 번호로 검색 -->
  	<select id="selectProduct" parameterType="int" resultType="com.allhomes.myapp.product.ProductVO">
  		select pd_no, s_no, pd_name, price, discount, main_img, stock, status, sub_c, pd_img, pd_exp, shipping_c, o_value from product where pd_no=#{pd_no}
  	</select>
  	<!-- 제품+스토어 조인 -->
  	<select id="joinProductStore" parameterType="String" resultType="com.allhomes.myapp.product.ProductVO">
  		select p.pd_no, p.pd_name, p.main_img, s.s_no, s.s_name from product p, store s where p.s_no=s.s_no and userid=#{userid}
  	</select>
  	<!-- 제품 추가 -->
  	<insert id="insertProduct" parameterType="com.allhomes.myapp.product.ProductVO">
  		insert into product(pd_no, s_no, pd_name, price, discount, main_img, stock, status, sub_c, pd_img, pd_exp, shipping_c, o_value)
  		 values(pd_sq.nextval, #{s_no}, #{pd_name}, #{price}, #{discount}, #{main_img}, #{stock}, #{status}, #{sub_c}, #{pd_img}, #{pd_exp}, #{shipping_c}, #{o_value})
  	</insert>
  	
  	<!-- 제품 수정 테스트-->
  	<update id="editProduct" parameterType="com.allhomes.myapp.product.ProductVO">
  		update product set pd_name=#{pd_name}, price=#{price}, discount=#{discount},
  		 stock=#{stock}, status=#{status}, sub_c=#{sub_c}, pd_exp=#{pd_exp}, shippig_c=#{shipping_c}, o_value=#{o_value} where pd_no=#{pd_no}
  	</update>
  	
  	<!--제품수정
  	<update id="editProduct" parameterType="com.allhomes.myapp.product.ProductVO">
  		update product set  pd_name=#{pd_name}, price=#{price}, discount=#{discount},
  		main_img=#{main_img}, stock=#{stock}, status=#{status}, sub_c=#{sub_c},pd_img=#{pd_img} where pd_no=#{pd_no}
  	</update> -->
  	
  	<!-- 제품 삭제 -->
  	<delete id="delProduct" parameterType="int">
  		delete from product where pd_no=#{pd_no}
  	</delete>
  	
  	<!-- 스토어의 총 제품 개수 검색 -->
  	<select id="countProduct" resultType="int">
  		select count(*) from product where s_no=#{s_no}
  	</select>
  	
  </mapper>