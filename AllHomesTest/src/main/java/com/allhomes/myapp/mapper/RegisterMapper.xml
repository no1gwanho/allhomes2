<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.allhomes.myapp.register.RegisterDaoImp">
 	<select id="login" resultType="com.allhomes.myapp.register.RegisterVO">
 		select m_no, userid, username, nickname, regcode,email,tel,m_pic from register where userid=#{userid} and userpwd=#{userpwd}
 	</select>
 
 
 
 	<!-- 회원정보 입력 -->	
 	<insert id="registerMember" parameterType="com.allhomes.myapp.register.RegisterVO">

 		insert into register(m_no, userid,userpwd,username,nickname,tel,m_pic,email,regdate,regcode)
 		values(reg_sq.nextval,#{userid},#{userpwd},#{username},#{nickname},#{tel},#{m_pic},#{email},sysdate,'0')

 	</insert>
 	
 	<!-- 닉네임 중복검사 -->
 	<select id="nicknameCheck" resultType="String">
 		select nickname from register where nickname=#{nickname} and nickname!='membUs'
 	</select>
 	
 	
 	
 	
 	<!-- 아이디 중복검사 -->
 	<select id="dupFilter" resultType="String">
 		select userid from register where userid=#{userid}
 	</select>
 	
 	  	  	
 	<!-- 이메일 인증코드  -->
 	<update id="regFinal" parameterType="com.allhomes.myapp.register.RegisterVO">
 		update register set regcode=1 where userid=#{userid}
 	</update> 
 	
 	<!-- 이메일 중복검사 -->
 	<select id="mailFilter" resultType="String">
 		select email from register where email=#{email}
 	</select>
 	

 	<!-- 정보수정 중복검사 -->
 	<select id="dupCheck" resultType="com.allhomes.myapp.register.RegisterVO">
 		select email, nickname from register where email=#{email} and nickname!='membUs' and nickname=#{nickname}
 	</select>
  	
  	<!-- 회원정보 업데이트-->
  	<update id="userMebUpdate" parameterType="com.allhomes.myapp.register.RegisterVO">
  		update register set email=#{email}, nickname=#{nickname},tel=#{tel},m_pic=#{m_pic} where m_no=#{m_no}
  	</update>
  	
	<!-- 회원탈퇴자 로그인 block -->
	<update id="memLogBlock" parameterType="int">
		update register set regcode='2' where m_no=#{m_no}
	</update>


	<!-- 회원탈퇴 정보 수집 -->
	<insert id="memOutData" parameterType="com.allhomes.myapp.register.RegisterVO">
		insert into memwithdraw (out_no,userid,nickname,outmemo) values (outmem_no_sq.nextval,#{userid},#{nickname},#{outmemo})
	</insert>



 	<select id="oneMeberSelect" parameterType="String" resultType="com.allhomes.myapp.register.RegisterVO">
 		select * from register where userid=#{userid}
 	</select>

</mapper> 

