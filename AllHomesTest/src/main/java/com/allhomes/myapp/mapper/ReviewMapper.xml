<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.allhomes.myapp.review.ReviewDaoImp">
<select id="reviewList" resultType="com.allhomes.myapp.review.ReviewVO">
	select pd_no, avg(rating) as rating from review group by pd_no 
</select>
<select id="allReviewList" resultType="com.allhomes.myapp.review.ReviewVO">
	select userid, pd_no, rating, img, content, writedate, s_no from review order by writedate desc
</select>
<select id="selectOneReview" resultType="com.allhomes.myapp.review.ReviewVO">
	select userid, pd_no, rating, img, content, writedate, s_no from review where userid=#{userid} and pd_no=#{pd_no}
</select>
<insert id="insertReview" parameterType="com.allhomes.myapp.review.ReviewVO">
	insert into review(userid, pd_no, rating, img, content, writedate, s_no, r_no) select #{userid}, #{pd_no}, #{rating}, #{img}, #{content}, sysdate, #{s_no}, r_no_sq.nextval from dual a
	where not exists(select r_no from review where r_no=#{r_no} and userid=#{userid})
</insert>
<update id="reviewHitAdd" parameterType="com.allhomes.myapp.review.ReviewVO">
	update review set hit = hit+1 where r_no=#{r_no}
</update>
<update id="editReview" parameterType="com.allhomes.myapp.review.ReviewVO">
	update review set rating=#{rating}, img=#{img}, content=#{content} where userid=#{userid} and pd_no=#{pd_no} and r_no=#{r_no}
</update>
<delete id="delReview" parameterType="com.allhomes.myapp.review.ReviewVO">
	delete from review where r_no=#{r_no} and userid=#{userid}
</delete>

<select id="selectReviewList" resultType="com.allhomes.myapp.review.ReviewJoinVO">
	select from (select c.pc_no, c.pc_date, c.userid, c.pd_no, c.num, c.o_value, p.pd_name, 
	r.userid, r.img, r.content, r.writedate, r.rating from purchase c join product p on c.pd_no=p.pd_no join review r on c.userid=r.userid) 
	where chk_no=#{chk_no}
</select>

<!-- 리뷰 글쓰기 & 수정하기 -->
<select id="productInfo" parameterType="com.allhomes.myapp.purchase.PurchaseJoinVO" resultType="com.allhomes.myapp.review.ReviewJoinVO">
	select * from (select c.pc_no, c.pd_no, to_char(c.pc_date, 'YYYY-MM-DD') pc_date, c.o_value, c.num, c.userid, c.s_no, p.pd_name, p.main_img from purchase c, product p where p.pd_no = c.pd_no) where pc_no=#{pc_no} and userid=#{userid}
</select>
<select id="reviewInfo" parameterType="com.allhomes.myapp.review.ReviewVO" resultType="com.allhomes.myapp.review.ReviewVO">
	select * from review where pd_no=${pd_no} and userid=#{userid} and r_no=${r_no}
</select>

<!-- 스토어디테일 페이지 -->
<select id="selectReview" resultType="com.allhomes.myapp.review.ReviewVO">
	select userid, pd_no, img, content, to_char(writedate, 'YYYY-MM-DD') writedate, rating, r_no, hit from review where pd_no=#{pd_no} order by writedate desc
</select>
<select id="reviewSetting" parameterType="com.allhomes.myapp.review.ReviewJoinVO" resultType="com.allhomes.myapp.review.ReviewJoinVO">
	select * from (select c.pc_date, c.s_no, c.pd_no, c.o_value, c.num, r.userid, r.rating, r.img, r.content from review r join purchase c on r.pd_no=c.pd_no) where pd_no=#{pd_no} and userid=#{userid}
</select>
<select id="avgReview" parameterType="int" resultType="com.allhomes.myapp.review.ReviewVO">
	select * from (select pd_no, trunc(avg(rating)) as rating from review group by pd_no) where pd_no=#{pd_no}
</select>
<select id="countReview" parameterType="int" resultType="int">
	select count(pd_no) from review where pd_no=#{pd_no}
</select>
<select id="getAllReview" parameterType="com.allhomes.myapp.product.PagingVO">
	select count(pd_no) from review where pd_no=#{pd_no} and userid=#{userid}
</select>
<select id="reviewSelect" parameterType="String" resultType="com.allhomes.myapp.review.ReviewVO">
	select r_no, userid, img, content, rating, pd_no, writedate, hit from review where userid=#{userid}
</select>

</mapper>
