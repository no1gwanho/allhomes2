<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- 
		1. Intercepter처리를 위해서는 beans시작태그에 context, mvc를 추가 
		2. Intercepter할 매핑주소를 기록한다. 
		3. DispatcherServlet이 알아서 접속이 이뤄지면 interceptor한다. 
		4. web.xml에 /WEB-INF/spring/appServlet/mvc-context.xml 를 추가해준다. 
	 -->
	 
	 <mvc:interceptors>
	 	<mvc:interceptor>
	 		<mvc:mapping path="/homeboardWrite"/>
	 		<mvc:mapping path="/homeboardWriteOk"/>
	 		<mvc:mapping path="/qnaWrite"/>
	 		<mvc:mapping path="/homeboardEdit"/>
	 		<mvc:mapping path="/homeboardEditOk"/>
	 		<mvc:mapping path="/cartInsert"/>
	 		<mvc:mapping path="/cartList"/>
	 		<mvc:mapping path="/replyLogin"/>
	 		<bean class="com.allhomes.myapp.interceptor.LoginInterceptor"/>
	 	</mvc:interceptor>
	 </mvc:interceptors>
</beans>